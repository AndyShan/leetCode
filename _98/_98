/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    std::vector<int> v;
    bool isValidBST(TreeNode* root) {
        if (root == NULL) {
        	return true;
        }
        if (root->right == NULL && root->left == NULL) {
        	return true;
        }
        inOrderTraversal(root);
        int l = v.size();
        for (int i = 1; i < l; ++i) {
        	if (v[i] <= v[i - 1]) {
        		return false;
        	}
        }
        return true;
    }

    void inOrderTraversal(TreeNode* root) {
    	if (root == NULL) {
    		return;
    	}
    	inOrderTraversal(root->left);
    	v.push_back(root->val);
    	inOrderTraversal(root->right);
    }
};